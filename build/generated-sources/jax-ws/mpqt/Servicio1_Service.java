
package mpqt;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "servicio1", targetNamespace = "http://MPQT/", wsdlLocation = "file:/D:/JAVA/PROY_PRUE_SERV1/src/conf/xml-resources/web-services/OTRO_SERVICIO/wsdl/servicio1.wsdl.xml.wsdl")
public class Servicio1_Service
    extends Service
{

    private final static URL SERVICIO1_WSDL_LOCATION;
    private final static WebServiceException SERVICIO1_EXCEPTION;
    private final static QName SERVICIO1_QNAME = new QName("http://MPQT/", "servicio1");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/D:/JAVA/PROY_PRUE_SERV1/src/conf/xml-resources/web-services/OTRO_SERVICIO/wsdl/servicio1.wsdl.xml.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        SERVICIO1_WSDL_LOCATION = url;
        SERVICIO1_EXCEPTION = e;
    }

    public Servicio1_Service() {
        super(__getWsdlLocation(), SERVICIO1_QNAME);
    }

    public Servicio1_Service(WebServiceFeature... features) {
        super(__getWsdlLocation(), SERVICIO1_QNAME, features);
    }

    public Servicio1_Service(URL wsdlLocation) {
        super(wsdlLocation, SERVICIO1_QNAME);
    }

    public Servicio1_Service(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, SERVICIO1_QNAME, features);
    }

    public Servicio1_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Servicio1_Service(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns Servicio1
     */
    @WebEndpoint(name = "servicio1Port")
    public Servicio1 getServicio1Port() {
        return super.getPort(new QName("http://MPQT/", "servicio1Port"), Servicio1.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns Servicio1
     */
    @WebEndpoint(name = "servicio1Port")
    public Servicio1 getServicio1Port(WebServiceFeature... features) {
        return super.getPort(new QName("http://MPQT/", "servicio1Port"), Servicio1.class, features);
    }

    private static URL __getWsdlLocation() {
        if (SERVICIO1_EXCEPTION!= null) {
            throw SERVICIO1_EXCEPTION;
        }
        return SERVICIO1_WSDL_LOCATION;
    }

}
